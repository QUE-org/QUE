{"version":3,"sources":["img/flier_20200604.jpg","img/logo500.png","components/Apply.jsx","components/Home.jsx","components/FacebookPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Apply","titles","name","mail","affiliation","session2","content","placeholder","required","true","false","send","isRequired","input","className","method","action","type","Form","Control","as","map","t","key","value","Home","props","language","src","HomePic","alt","FacebookPage","class","data-href","data-tabs","data-width","data-height","data-small-header","data-adapt-container-width","data-hide-cover","data-show-facepile","cite","href","Component","App","setLanguage","lang","setState","state","this","dropdown","DropdownButton","variant","title","id","Dropdown","Item","onSelect","Logo","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.badca19d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flier_20200604.80c0cade.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo500.76f18eb6.png\";","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nfunction Apply() {\n  const mail = \"que.org.members@gmail.com\"\n\n  const translation = {\n   'ja' :{\n     titles: {\n      name: \"お名前\",\n      mail: \"メールアドレス\",\n      affiliation: \"ご所属\",\n      session2: \"セッション2の参加\",\n      content: \"備考\"\n     },\n     session2 : [\n      \"希望しない\",\n       \"希望する\"\n     ],\n     placeholder: {\n       name: \"佐藤 太郎\"\n     },\n     required: {\n       true: \"必須\",\n       false: \"任意\"\n     },\n     send: \"送信\"\n    }\n  }\n\n  const {titles, session2, placeholder, required, send} = translation['ja']\n\n  const isRequired = (input) => {\n    return (\n      <div className={input ? \"required\" : \"optional\"}>\n        {input ? required.true : required.false}\n      </div>\n    )\n  }\n  \n\n  return (\n    <div className=\"contact-form\">\n      <form method=\"POST\" action={\"https://formspree.io/\" + mail} >\n        <h5 className=\"sec-title\">{titles.name} <br/>{isRequired(true)}</h5>\n        <input type='text' name='お名前' placeholder={placeholder.name} />\n        <h5 className=\"sec-title\">{titles.mail} <br/>{isRequired(true)}</h5>\n        <input type=\"email\" name=\"返信先\" placeholder=\"you@example.com\"/>\n        <h5 className=\"sec-title\">{titles.affiliation}<br/>{isRequired(false)}</h5>\n        <input type='text' name='所属'  />\n        <h5 className=\"sec-title\">{titles.session2} <br/>{isRequired(true)}</h5>\n        <Form.Control name='セッション２への参加' as=\"select\">\n          {\n            session2.map((t) => (<option key={t} value={t}>{t}</option>))\n          }\n        </Form.Control>\n        <h5 className=\"sec-title\">{titles.content} <br/>{isRequired(false)}</h5>\n        <textarea name='備考'></textarea>\n        <input className='submit' type=\"submit\" value={send}/>\n      </form>\n    </div>\n  );\n}\n\nexport default Apply;","import React from 'react'\n\nimport HomePic from '../img/flier_20200604.jpg'\nimport Apply from './Apply'\n\nconst Home = (props) => {\n  return (\n    props.language === 'ja' ?\n    <div className=\"home\">\n      <img src={HomePic} alt=\"教えて、早稲田生！\" />\n      <h4>【日時】</h4>\n      <p>2020年6月4日（木）18:30〜</p>\n      <h4>【形式】</h4>\n      <p>ZOOMミーティング</p>\n      <p>セッション1 : 3名のユニークな早稲田生によるトーク</p>\n      <p>セッション2 : 早稲田生との懇親会<b>（希望者3名限定）</b></p>\n      <h4>【参加方法】</h4>\n      <p>以下の申込フォームに情報を入力し「送信」ボタンを押してください。</p>\n      <p>セッション1の参加者には前日までにZOOMのリンクをメールにて送信致します。</p>\n      <p>セッション2に参加を希望される方は<b>6月2日までに</b>お申し込みください。希望者が3名を超えた場合は抽選を行いますので，ご了承ください。当選された方には前日に参加確認メールをお送りしますので，必ずご返信いただくようお願い致します。</p>\n      <Apply />\n    </div>\n    : \n    <div className=\"home\">\n      <img src={HomePic} alt=\"教えて、早稲田生！\" />\n      <p>* This event will be held in Japanese only.  We'll be planning events in English soon, so please keep checking our facebook page for updates!</p>\n    </div>\n  )\n}\n\nexport default Home\n","import React, { Component } from 'react'\n\nexport default class FacebookPage extends Component {\n  // componentDidMount() {\n  //   document.addEventListener('fb_init', e => FB.XFBML.parse());\n  // }\n  render() {\n    return (\n      <div class=\"fb-page\" data-href=\"https://www.facebook.com/QUE-student-organization-107608664278685/\" data-tabs=\"timeline\" data-width=\"\" data-height=\"\" data-small-header=\"false\" data-adapt-container-width=\"true\" data-hide-cover=\"false\" data-show-facepile=\"true\">\n        <blockquote cite=\"https://www.facebook.com/QUE-student-organization-107608664278685/\" class=\"fb-xfbml-parse-ignore\">\n          <a href=\"https://www.facebook.com/QUE-student-organization-107608664278685/\">QUE - student organization</a>\n        </blockquote>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport Home from './components/Home'\n// import Contact from './components/Contact';\nimport {Dropdown, DropdownButton} from 'react-bootstrap'\nimport Logo from './img/logo500.png'\nimport FacebookPage from './components/FacebookPage';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      language:  'ja'\n    }\n  }\n\n  setLanguage = (lang) => {\n    this.setState({\n      language: lang\n    })\n  }\n\n  render() {\n    const language = this.state.language\n    const dropdown = <DropdownButton variant=\"secondary\" title=\"Language\" id=\"language-select\">\n      <Dropdown.Item as=\"button\" onSelect={() => this.setLanguage('ja')} >日本語</Dropdown.Item>\n      <Dropdown.Item as=\"button\" onSelect={() => this.setLanguage('en')} >English</Dropdown.Item>\n    </DropdownButton>\n    return (\n      <div className=\"main\">\n        <header>\n          <img src={Logo} alt=\"QUE\" />\n          {dropdown}\n        </header>\n        <Home language={language}/>\n        {/* <Contact language={language}/> */}\n        <FacebookPage />\n        <footer><p>Copyright ©︎ 2020 QUE All rights reserved.</p></footer>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}